#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üå± BLOOM HELPER - –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ë–ª—É–º–∞

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ (–ë–ª—É–º—É) –ª–µ–≥–∫–æ —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ú–∞–∫—Å–∞
–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã —á–µ—Ä–µ–∑ –±–æ—Ç–∞.
"""

import json
import os
from datetime import datetime

MESSAGES_FILE = os.path.join(os.path.dirname(__file__), 'messages.json')
RESPONSES_FILE = os.path.join(os.path.dirname(__file__), 'responses.json')


def load_json(filename):
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å JSON"""
    if os.path.exists(filename):
        with open(filename, 'r', encoding='utf-8') as f:
            return json.load(f)
    return []


def save_json(filename, data):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å JSON"""
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)


def show_new_messages():
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ú–∞–∫—Å–∞"""
    messages = load_json(MESSAGES_FILE)
    new_messages = [m for m in messages if m['status'] == 'new']
    
    if not new_messages:
        print("üì≠ –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ú–∞–∫—Å–∞")
        return []
    
    print(f"\nüì¨ –ù–û–í–´–ï –°–û–û–ë–©–ï–ù–ò–Ø ({len(new_messages)}):")
    print("=" * 60)
    
    for msg in new_messages:
        timestamp = datetime.fromisoformat(msg['timestamp']).strftime('%d.%m.%Y %H:%M')
        print(f"\n[#{msg['id']}] {timestamp}")
        print(f"–û—Ç: {msg['username']}")
        print(f"–¢–µ–∫—Å—Ç: {msg['text']}")
        print("-" * 60)
    
    return new_messages


def mark_as_read(message_ids=None):
    """–ü–æ–º–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ"""
    messages = load_json(MESSAGES_FILE)
    
    count = 0
    for msg in messages:
        if message_ids is None or msg['id'] in message_ids:
            if msg['status'] == 'new':
                msg['status'] = 'read'
                count += 1
    
    save_json(MESSAGES_FILE, messages)
    print(f"‚úÖ –ü–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ: {count} —Å–æ–æ–±—â–µ–Ω–∏–π")


def send_response(text, parse_mode=None):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ú–∞–∫—Å—É"""
    responses = load_json(RESPONSES_FILE)
    
    response = {
        'id': len(responses) + 1,
        'text': text,
        'timestamp': datetime.now().isoformat(),
        'status': 'new',
    }
    
    if parse_mode:
        response['parse_mode'] = parse_mode
    
    responses.append(response)
    save_json(RESPONSES_FILE, responses)
    
    print(f"‚úÖ –û—Ç–≤–µ—Ç #{response['id']} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –æ—Ç–ø—Ä–∞–≤–∫–∏!")
    print(f"–¢–µ–∫—Å—Ç: {text[:100]}...")


def show_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"""
    messages = load_json(MESSAGES_FILE)
    responses = load_json(RESPONSES_FILE)
    
    new_msg = sum(1 for m in messages if m['status'] == 'new')
    read_msg = sum(1 for m in messages if m['status'] == 'read')
    
    new_resp = sum(1 for r in responses if r['status'] == 'new')
    sent_resp = sum(1 for r in responses if r['status'] == 'sent')
    
    print("\nüìä –°–¢–ê–¢–£–°:")
    print("=" * 60)
    print(f"üì¨ –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ú–∞–∫—Å–∞:")
    print(f"   üÜï –ù–æ–≤—ã—Ö: {new_msg}")
    print(f"   üëÄ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {read_msg}")
    print(f"   üìù –í—Å–µ–≥–æ: {len(messages)}")
    print()
    print(f"üí¨ –ú–æ–∏ –æ—Ç–≤–µ—Ç—ã:")
    print(f"   üÜï –í –æ—á–µ—Ä–µ–¥–∏: {new_resp}")
    print(f"   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {sent_resp}")
    print(f"   üìù –í—Å–µ–≥–æ: {len(responses)}")
    print("=" * 60)


def interactive_mode():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"""
    print("\nüå± BLOOM HELPER - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")
    print("=" * 60)
    
    while True:
        print("\n–ö–æ–º–∞–Ω–¥—ã:")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("2 - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç")
        print("3 - –ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ")
        print("4 - –°—Ç–∞—Ç—É—Å")
        print("0 - –í—ã—Ö–æ–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É: ").strip()
        
        if choice == '1':
            show_new_messages()
        
        elif choice == '2':
            text = input("\n–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:\n> ")
            if text:
                use_html = input("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ? (y/n): ").strip().lower()
                parse_mode = 'HTML' if use_html == 'y' else None
                send_response(text, parse_mode)
        
        elif choice == '3':
            mark_as_read()
        
        elif choice == '4':
            show_status()
        
        elif choice == '0':
            print("\nüëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!")
            break
        
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")


if __name__ == '__main__':
    try:
        interactive_mode()
    except KeyboardInterrupt:
        print("\n\nüëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!")

